{"ast":null,"code":"import{createSlice}from\"@reduxjs/toolkit\";export var scoreCountSlice=createSlice({name:\"scoreCount\",initialState:{count:0,form:null},reducers:{init:function init(state,_ref){var form=_ref.payload;//összeszámolni a pontokat\nconsole.log(form);Object.values(form).forEach(function(task){var value=task.formValue?Object.values(task.formValue)[0]:0;console.log(value);state.count+=value*1;console.log(\"ADDED: \",value*1);console.log(\"VALUE: \",state.count);});},increase:function increase(state,_ref2){var number=_ref2.payload;state.count+=number;},decrease:function decrease(state,_ref3){var number=_ref3.payload;state.count-=number;}}});var _scoreCountSlice$acti=scoreCountSlice.actions,increase=_scoreCountSlice$acti.increase,decrease=_scoreCountSlice$acti.decrease,init=_scoreCountSlice$acti.init;export{increase,decrease,init};export var scoreReducer=scoreCountSlice.reducer;","map":{"version":3,"sources":["D:/react/FormComponent/src/redux/scoreCount.js"],"names":["createSlice","scoreCountSlice","name","initialState","count","form","reducers","init","state","payload","console","log","Object","values","forEach","task","value","formValue","increase","number","decrease","actions","scoreReducer","reducer"],"mappings":"AAAA,OAASA,WAAT,KAA4B,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,eAAe,CAAGD,WAAW,CAAC,CACvCE,IAAI,CAAE,YADiC,CAEvCC,YAAY,CAAC,CACTC,KAAK,CAAE,CADE,CAETC,IAAI,CAAE,IAFG,CAF0B,CAMvCC,QAAQ,CAAE,CACNC,IAAI,CAAE,cAACC,KAAD,MAA4B,IAAVH,CAAAA,IAAU,MAAnBI,OAAmB,CAC9B;AACAC,OAAO,CAACC,GAAR,CAAYN,IAAZ,EACAO,MAAM,CAACC,MAAP,CAAcR,IAAd,EAAoBS,OAApB,CAA4B,SAACC,IAAD,CAAU,CAClC,GAAMC,CAAAA,KAAK,CAAGD,IAAI,CAACE,SAAL,CAAiBL,MAAM,CAACC,MAAP,CAAcE,IAAI,CAACE,SAAnB,EAA8B,CAA9B,CAAjB,CAAoD,CAAlE,CACAP,OAAO,CAACC,GAAR,CAAYK,KAAZ,EACAR,KAAK,CAACJ,KAAN,EAAeY,KAAK,CAAC,CAArB,CACAN,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAsBK,KAAK,CAAC,CAA5B,EACAN,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAsBH,KAAK,CAACJ,KAA5B,EACH,CAND,EAOH,CAXK,CAYNc,QAAQ,CAAE,kBAACV,KAAD,OAA8B,IAAZW,CAAAA,MAAY,OAArBV,OAAqB,CACpCD,KAAK,CAACJ,KAAN,EAAee,MAAf,CACH,CAdK,CAeNC,QAAQ,CAAE,kBAACZ,KAAD,OAA8B,IAAZW,CAAAA,MAAY,OAArBV,OAAqB,CACpCD,KAAK,CAACJ,KAAN,EAAee,MAAf,CACH,CAjBK,CAN6B,CAAD,CAAnC,CA2BA,0BAAqClB,eAAe,CAACoB,OAArD,CAAQH,QAAR,uBAAQA,QAAR,CAAkBE,QAAlB,uBAAkBA,QAAlB,CAA4Bb,IAA5B,uBAA4BA,IAA5B,C,+BACP,MAAO,IAAMe,CAAAA,YAAY,CAAGrB,eAAe,CAACsB,OAArC","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nexport const scoreCountSlice = createSlice({\r\n    name: \"scoreCount\",\r\n    initialState:{\r\n        count: 0,\r\n        form: null\r\n    },\r\n    reducers: {\r\n        init: (state, {payload: form}) => {\r\n            //összeszámolni a pontokat\r\n            console.log(form)\r\n            Object.values(form).forEach((task) => {\r\n                const value = task.formValue ? Object.values(task.formValue)[0] : 0;\r\n                console.log(value)\r\n                state.count += value*1\r\n                console.log(\"ADDED: \",value*1)\r\n                console.log(\"VALUE: \",state.count)\r\n            })\r\n        },\r\n        increase: (state, {payload: number}) => {\r\n            state.count += number;\r\n        },\r\n        decrease: (state, {payload: number}) => {\r\n            state.count -= number;\r\n        }\r\n    }\r\n})\r\n\r\nexport const { increase, decrease, init } = scoreCountSlice.actions;\r\nexport const scoreReducer = scoreCountSlice.reducer;"]},"metadata":{},"sourceType":"module"}