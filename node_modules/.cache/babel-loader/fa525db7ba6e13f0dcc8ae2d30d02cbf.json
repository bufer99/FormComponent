{"ast":null,"code":"import _defineProperty from\"D:/react/FormComponent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/react/FormComponent/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{createSlice,current}from\"@reduxjs/toolkit\";export var progressSlice=createSlice({name:\"progress\",initialState:{errors:{},results:{}},reducers:{addErrorById:function addErrorById(state,_ref){var action=_ref.payload;var text=action.text,id=action.id;//console.log(current(state).errors[id])\nstate.errors=_objectSpread(_objectSpread({},state.errors),{},_defineProperty({},id,[text]));},deleteErrorById:function deleteErrorById(state,_ref2){var id=_ref2.payload;delete state.errors[id];},createResult:function createResult(state,_ref3){var payload=_ref3.payload;var id=payload.id,type=payload.type,required=payload.required;state.results=_objectSpread(_objectSpread({},state.results),{},_defineProperty({},id,{\"id\":id,\"value\":type==='boolean'||required===false?0:null}));},addResult:function addResult(state,_ref4){var payload=_ref4.payload;var formValue=payload.formValue,id=payload.id,type=payload.type;var value=null;if(type==='list'){var good=formValue.good,bad=formValue.bad;good?value=good:value=bad;}else{value=formValue*1;}state.results=_objectSpread(_objectSpread({},state.results),{},_defineProperty({},id,{\"id\":id,\"value\":value}));}}});var _progressSlice$action=progressSlice.actions,addErrorById=_progressSlice$action.addErrorById,deleteErrorById=_progressSlice$action.deleteErrorById,addResult=_progressSlice$action.addResult,createResult=_progressSlice$action.createResult;export{addErrorById,deleteErrorById,addResult,createResult};export var progressReducer=progressSlice.reducer;","map":{"version":3,"sources":["D:/react/FormComponent/src/redux/progress.js"],"names":["createSlice","current","progressSlice","name","initialState","errors","results","reducers","addErrorById","state","action","payload","text","id","deleteErrorById","createResult","type","required","addResult","formValue","value","good","bad","actions","progressReducer","reducer"],"mappings":"yNAAA,OAASA,WAAT,CAAsBC,OAAtB,KAAqC,kBAArC,CAEA,MAAO,IAAMC,CAAAA,aAAa,CAAGF,WAAW,CAAC,CACrCG,IAAI,CAAE,UAD+B,CAErCC,YAAY,CAAE,CACVC,MAAM,CAAE,EADE,CAEVC,OAAO,CAAE,EAFC,CAFuB,CAMrCC,QAAQ,CAAE,CACNC,YAAY,CAAE,sBAACC,KAAD,MAAgC,IAAbC,CAAAA,MAAa,MAAtBC,OAAsB,CAE1C,GAAQC,CAAAA,IAAR,CAAqBF,MAArB,CAAQE,IAAR,CAAcC,EAAd,CAAqBH,MAArB,CAAcG,EAAd,CACA;AACAJ,KAAK,CAACJ,MAAN,gCACOI,KAAK,CAACJ,MADb,wBAEKQ,EAFL,CAEU,CACFD,IADE,CAFV,GAMH,CAXK,CAYNE,eAAe,CAAE,yBAACL,KAAD,OAA4B,IAATI,CAAAA,EAAS,OAAlBF,OAAkB,CACzC,MAAOF,CAAAA,KAAK,CAACJ,MAAN,CAAaQ,EAAb,CAAP,CACH,CAdK,CAeNE,YAAY,CAAE,sBAACN,KAAD,OAAwB,IAAdE,CAAAA,OAAc,OAAdA,OAAc,CAClC,GAAQE,CAAAA,EAAR,CAA+BF,OAA/B,CAAQE,EAAR,CAAYG,IAAZ,CAA+BL,OAA/B,CAAYK,IAAZ,CAAkBC,QAAlB,CAA+BN,OAA/B,CAAkBM,QAAlB,CACAR,KAAK,CAACH,OAAN,gCACOG,KAAK,CAACH,OADb,wBAEKO,EAFL,CAEU,CACF,KAAMA,EADJ,CAEF,QAAUG,IAAI,GAAK,SAAT,EAAsBC,QAAQ,GAAK,KAApC,CAA6C,CAA7C,CAAiD,IAFxD,CAFV,GAOH,CAxBK,CAyBNC,SAAS,CAAE,mBAACT,KAAD,OAAwB,IAAdE,CAAAA,OAAc,OAAdA,OAAc,CAC/B,GAAQQ,CAAAA,SAAR,CAAgCR,OAAhC,CAAQQ,SAAR,CAAmBN,EAAnB,CAAgCF,OAAhC,CAAmBE,EAAnB,CAAuBG,IAAvB,CAAgCL,OAAhC,CAAuBK,IAAvB,CAEA,GAAII,CAAAA,KAAK,CAAG,IAAZ,CAEA,GAAIJ,IAAI,GAAK,MAAb,CAAqB,CACjB,GAAQK,CAAAA,IAAR,CAAsBF,SAAtB,CAAQE,IAAR,CAAcC,GAAd,CAAsBH,SAAtB,CAAcG,GAAd,CACAD,IAAI,CAAGD,KAAK,CAAGC,IAAX,CAAkBD,KAAK,CAAGE,GAA9B,CACH,CAHD,IAGO,CACHF,KAAK,CAAGD,SAAS,CAAG,CAApB,CACH,CAEDV,KAAK,CAACH,OAAN,gCACOG,KAAK,CAACH,OADb,wBAEKO,EAFL,CAEU,CACF,KAAMA,EADJ,CAEF,QAASO,KAFP,CAFV,GAOH,CA5CK,CAN2B,CAAD,CAAjC,CAsDA,0BAAmElB,aAAa,CAACqB,OAAjF,CAAQf,YAAR,uBAAQA,YAAR,CAAsBM,eAAtB,uBAAsBA,eAAtB,CAAuCI,SAAvC,uBAAuCA,SAAvC,CAAkDH,YAAlD,uBAAkDA,YAAlD,C,4DACP,MAAO,IAAMS,CAAAA,eAAe,CAAGtB,aAAa,CAACuB,OAAtC","sourcesContent":["import { createSlice, current } from \"@reduxjs/toolkit\";\r\n\r\nexport const progressSlice = createSlice({\r\n    name: \"progress\",\r\n    initialState: {\r\n        errors: {},\r\n        results: {}\r\n    },\r\n    reducers: {\r\n        addErrorById: (state, { payload: action }) => {\r\n\r\n            const { text, id } = action\r\n            //console.log(current(state).errors[id])\r\n            state.errors = {\r\n                ...state.errors,\r\n                [id]: [\r\n                    text\r\n                ]\r\n            }\r\n        },\r\n        deleteErrorById: (state, { payload: id }) => {\r\n            delete state.errors[id]\r\n        },\r\n        createResult: (state, { payload }) => {\r\n            const { id, type, required } = payload\r\n            state.results = {\r\n                ...state.results,\r\n                [id]: {\r\n                    \"id\": id,\r\n                    \"value\": (type === 'boolean' || required === false) ? 0 : null\r\n                }\r\n            }\r\n        },\r\n        addResult: (state, { payload }) => {\r\n            const { formValue, id, type } = payload\r\n\r\n            let value = null;\r\n\r\n            if (type === 'list') {\r\n                const { good, bad } = formValue;\r\n                good ? value = good : value = bad;\r\n            } else {\r\n                value = formValue * 1\r\n            }\r\n\r\n            state.results = {\r\n                ...state.results,\r\n                [id]: {\r\n                    \"id\": id,\r\n                    \"value\": value\r\n                }\r\n            }\r\n        }\r\n    }\r\n})\r\n\r\nexport const { addErrorById, deleteErrorById, addResult, createResult } = progressSlice.actions;\r\nexport const progressReducer = progressSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}