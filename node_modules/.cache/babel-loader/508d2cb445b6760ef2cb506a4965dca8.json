{"ast":null,"code":"import _slicedToArray from\"D:/react/FormComponent/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect}from'react';import{useState}from'react';import Box from'@mui/material/Box';import Tab from'@mui/material/Tab';import TabContext from'@material-ui/lab/TabContext';import TabList from'@material-ui/lab/TabList';import TabPanel from'@material-ui/lab/TabPanel';import TabContent from'./TabContent';import{createResult}from'../redux/progress';import{useDispatch,useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export var ValueContext=/*#__PURE__*/React.createContext({value:1,setValue:function setValue(){}});export default function FormHolder(_ref){var criteria=_ref.criteria,onSubmit=_ref.onSubmit,onCancel=_ref.onCancel;var _useState=useState('1'),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var context={value:value,setValue:setValue,criteria:criteria};var handleChange=function handleChange(event,newValue){setValue(newValue);};var dispatch=useDispatch();useEffect(function(){criteria.tasks.forEach(function(e){e.aspects.forEach(function(aspect){dispatch(createResult(aspect));});});},[]);return/*#__PURE__*/_jsxs(TabContext,{value:value,children:[/*#__PURE__*/_jsx(Box,{sx:{borderBottom:1,borderColor:'divider'},children:/*#__PURE__*/_jsx(TabList,{onChange:handleChange,variant:\"scrollable\"//centered \n,scrollButtons:\"auto\",children:criteria.tasks.map(function(task,index){return/*#__PURE__*/_jsx(Tab,{label:task.name,value:\"\".concat(index+1)},index);})})}),criteria.tasks.map(function(task,index){return/*#__PURE__*/_jsx(TabPanel,{value:\"\".concat(index+1),children:/*#__PURE__*/_jsx(ValueContext.Provider,{value:context,children:/*#__PURE__*/_jsx(TabContent,{task:task.aspects,onSubmit:onSubmit,onCancel:onCancel})})},index);})]});}","map":{"version":3,"sources":["D:/react/FormComponent/src/scoring/FormHolder.js"],"names":["React","useEffect","useState","Box","Tab","TabContext","TabList","TabPanel","TabContent","createResult","useDispatch","useSelector","ValueContext","createContext","value","setValue","FormHolder","criteria","onSubmit","onCancel","context","handleChange","event","newValue","dispatch","tasks","forEach","e","aspects","aspect","borderBottom","borderColor","map","task","index","name"],"mappings":"4GAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,QAAT,KAAyB,OAAzB,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,GAAP,KAAgB,mBAAhB,CACA,MAAOC,CAAAA,UAAP,KAAuB,6BAAvB,CACA,MAAOC,CAAAA,OAAP,KAAoB,0BAApB,CACA,MAAOC,CAAAA,QAAP,KAAqB,2BAArB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,YAAT,KAA6B,mBAA7B,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,C,wFAEA,MAAO,IAAMC,CAAAA,YAAY,cAAGZ,KAAK,CAACa,aAAN,CAAoB,CAC5CC,KAAK,CAAE,CADqC,CAE5CC,QAAQ,CAAE,mBAAM,CAAG,CAFyB,CAApB,CAArB,CAKP,cAAe,SAASC,CAAAA,UAAT,MAAsD,IAAhCC,CAAAA,QAAgC,MAAhCA,QAAgC,CAAtBC,QAAsB,MAAtBA,QAAsB,CAAZC,QAAY,MAAZA,QAAY,CAEjE,cAA0BjB,QAAQ,CAAC,GAAD,CAAlC,wCAAOY,KAAP,eAAcC,QAAd,eACA,GAAMK,CAAAA,OAAO,CAAG,CAAEN,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAmBE,QAAQ,CAARA,QAAnB,CAAhB,CAEA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACtCR,QAAQ,CAACQ,QAAD,CAAR,CACH,CAFD,CAGA,GAAMC,CAAAA,QAAQ,CAAGd,WAAW,EAA5B,CAEAT,SAAS,CAAC,UAAM,CAEZgB,QAAQ,CAACQ,KAAT,CAAeC,OAAf,CAAuB,SAAAC,CAAC,CAAI,CACxBA,CAAC,CAACC,OAAF,CAAUF,OAAV,CAAkB,SAAAG,MAAM,CAAI,CACxBL,QAAQ,CAACf,YAAY,CAACoB,MAAD,CAAb,CAAR,CAEH,CAHD,EAIH,CALD,EAMH,CARQ,CAQN,EARM,CAAT,CAUA,mBACI,MAAC,UAAD,EAAY,KAAK,CAAEf,KAAnB,wBACI,KAAC,GAAD,EAAK,EAAE,CAAE,CAAEgB,YAAY,CAAE,CAAhB,CAAmBC,WAAW,CAAE,SAAhC,CAAT,uBACI,KAAC,OAAD,EACI,QAAQ,CAAEV,YADd,CAEI,OAAO,CAAC,YACR;AAHJ,CAII,aAAa,CAAC,MAJlB,UAMKJ,QAAQ,CAACQ,KAAT,CAAeO,GAAf,CAAmB,SAACC,IAAD,CAAOC,KAAP,qBAChB,KAAC,GAAD,EAAiB,KAAK,CAAED,IAAI,CAACE,IAA7B,CAAmC,KAAK,WAAKD,KAAK,CAAG,CAAb,CAAxC,EAAUA,KAAV,CADgB,EAAnB,CANL,EADJ,EADJ,CAaKjB,QAAQ,CAACQ,KAAT,CAAeO,GAAf,CAAmB,SAACC,IAAD,CAAOC,KAAP,qBAChB,KAAC,QAAD,EAAsB,KAAK,WAAKA,KAAK,CAAG,CAAb,CAA3B,uBACI,KAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAEd,OAA9B,uBACI,KAAC,UAAD,EAAY,IAAI,CAAEa,IAAI,CAACL,OAAvB,CAAgC,QAAQ,CAAEV,QAA1C,CAAoD,QAAQ,CAAEC,QAA9D,EADJ,EADJ,EAAee,KAAf,CADgB,EAAnB,CAbL,GADJ,CAwBH","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Tab from '@mui/material/Tab';\r\nimport TabContext from '@material-ui/lab/TabContext';\r\nimport TabList from '@material-ui/lab/TabList';\r\nimport TabPanel from '@material-ui/lab/TabPanel';\r\nimport TabContent from './TabContent';\r\nimport { createResult } from '../redux/progress';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nexport const ValueContext = React.createContext({\r\n    value: 1,\r\n    setValue: () => { }\r\n});\r\n\r\nexport default function FormHolder({ criteria, onSubmit, onCancel }) {\r\n\r\n    const [value, setValue] = useState('1');\r\n    const context = { value, setValue, criteria };\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n       \r\n        criteria.tasks.forEach(e => {\r\n            e.aspects.forEach(aspect => {\r\n                dispatch(createResult(aspect))\r\n        \r\n            })\r\n        });\r\n    }, [])\r\n\r\n    return (\r\n        <TabContext value={value}>\r\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\r\n                <TabList\r\n                    onChange={handleChange}\r\n                    variant=\"scrollable\"\r\n                    //centered \r\n                    scrollButtons=\"auto\"\r\n                >\r\n                    {criteria.tasks.map((task, index) => (\r\n                        <Tab key={index} label={task.name} value={`${index + 1}`} />\r\n                    ))}\r\n                </TabList>\r\n            </Box>\r\n            {criteria.tasks.map((task, index) => (\r\n                <TabPanel key={index} value={`${index + 1}`}>\r\n                    <ValueContext.Provider value={context}>\r\n                        <TabContent task={task.aspects} onSubmit={onSubmit} onCancel={onCancel}></TabContent>\r\n                    </ValueContext.Provider>\r\n                </TabPanel>\r\n            ))}\r\n        </TabContext>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}