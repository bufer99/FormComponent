{"ast":null,"code":"import _defineProperty from\"D:/react/FormComponent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/react/FormComponent/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/react/FormComponent/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{FormControl,RadioGroup,Radio,FormControlLabel,FormLabel}from\"@mui/material\";import{useState,useEffect}from'react';import{useSelector}from'react-redux';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function RadioBtnComponent(_ref){var value=_ref.value,id=_ref.id,required=_ref.required,formState=_ref.formState;var form=useSelector(function(state){return state.form.tasks[id];});var _useState=useState(function(){if(form){return form.formValue;}return'';}),_useState2=_slicedToArray(_useState,2),Radiovalue=_useState2[0],setRadioValue=_useState2[1];var formValues=formState.formValues,setFormValues=formState.setFormValues;var handleOnChange=function handleOnChange(event,newValue){setRadioValue(newValue);setFormValues(function(formValues){return _objectSpread(_objectSpread({},formValues),{},_defineProperty({},id,_objectSpread(_objectSpread({},formValues[id]),{},{formValue:newValue})));});};return/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(FormLabel,{id:\"label\",children:\"Value\"}),/*#__PURE__*/_jsxs(RadioGroup,{\"aria-labelledby\":\"label\",defaultValue:\"\",name:\"radio-button\",onChange:handleOnChange,value:Radiovalue,children:[/*#__PURE__*/_jsx(FormControlLabel,{value:value,control:/*#__PURE__*/_jsx(Radio,{}),label:\"Igaz\"}),/*#__PURE__*/_jsx(FormControlLabel,{value:0,control:/*#__PURE__*/_jsx(Radio,{}),label:\"Hamis\"})]})]});}","map":{"version":3,"sources":["D:/react/FormComponent/src/FormComponents/RadioBtnComponent.js"],"names":["FormControl","RadioGroup","Radio","FormControlLabel","FormLabel","useState","useEffect","useSelector","RadioBtnComponent","value","id","required","formState","form","state","tasks","formValue","Radiovalue","setRadioValue","formValues","setFormValues","handleOnChange","event","newValue"],"mappings":"qUAAA,OACIA,WADJ,CAEIC,UAFJ,CAGIC,KAHJ,CAIIC,gBAJJ,CAKIC,SALJ,KAMQ,eANR,CAOA,OAASC,QAAT,CAAkBC,SAAlB,KAAmC,OAAnC,CACA,OAASC,WAAT,KAA4B,aAA5B,C,wFAGA,cAAe,SAASC,CAAAA,iBAAT,MAA4D,IAAhCC,CAAAA,KAAgC,MAAhCA,KAAgC,CAAzBC,EAAyB,MAAzBA,EAAyB,CAArBC,QAAqB,MAArBA,QAAqB,CAAXC,SAAW,MAAXA,SAAW,CAEvE,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAN,CAAWE,KAAX,CAAiBL,EAAjB,CAAX,EAAD,CAAxB,CAEA,cAAoCL,QAAQ,CAAC,UAAM,CAC/C,GAAGQ,IAAH,CAAQ,CACJ,MAAOA,CAAAA,IAAI,CAACG,SAAZ,CACH,CACG,MAAO,EAAP,CACP,CAL2C,CAA5C,wCAAOC,UAAP,eAAmBC,aAAnB,eAOA,GAAOC,CAAAA,UAAP,CAAoCP,SAApC,CAAOO,UAAP,CAAmBC,aAAnB,CAAoCR,SAApC,CAAmBQ,aAAnB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACxCL,aAAa,CAACK,QAAD,CAAb,CAEAH,aAAa,CAAC,SAACD,UAAD,wCACPA,UADO,wBAETT,EAFS,gCAGHS,UAAU,CAACT,EAAD,CAHP,MAINM,SAAS,CAAEO,QAJL,MAAD,CAAb,CAOH,CAVD,CAYA,mBACI,MAAC,WAAD,yBACI,KAAC,SAAD,EAAW,EAAE,CAAC,OAAd,mBADJ,cAEI,MAAC,UAAD,EACI,kBAAgB,OADpB,CAEI,YAAY,CAAC,EAFjB,CAGI,IAAI,CAAC,cAHT,CAII,QAAQ,CAAEF,cAJd,CAKI,KAAK,CAAEJ,UALX,wBAQI,KAAC,gBAAD,EAAkB,KAAK,CAAER,KAAzB,CAAgC,OAAO,cAAE,KAAC,KAAD,IAAzC,CAAoD,KAAK,CAAC,MAA1D,EARJ,cASI,KAAC,gBAAD,EAAkB,KAAK,CAAE,CAAzB,CAA4B,OAAO,cAAE,KAAC,KAAD,IAArC,CAAgD,KAAK,CAAC,OAAtD,EATJ,GAFJ,GADJ,CAgBH","sourcesContent":["import { \r\n    FormControl,\r\n    RadioGroup, \r\n    Radio, \r\n    FormControlLabel, \r\n    FormLabel,\r\n } from \"@mui/material\";\r\nimport { useState,useEffect } from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nexport default function RadioBtnComponent({value, id, required, formState}){\r\n\r\n    const form = useSelector((state) => state.form.tasks[id]);\r\n\r\n    const [Radiovalue, setRadioValue] = useState(() => {\r\n        if(form){\r\n            return form.formValue;\r\n        }\r\n            return ''\r\n    });\r\n\r\n    const {formValues, setFormValues} = formState\r\n\r\n    const handleOnChange = (event, newValue) => {\r\n        setRadioValue(newValue)\r\n\r\n        setFormValues((formValues) => ({\r\n            ...formValues,\r\n            [id]:{\r\n                ...formValues[id],\r\n                formValue: newValue\r\n            }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <FormControl>\r\n            <FormLabel id=\"label\">Value</FormLabel>\r\n            <RadioGroup\r\n                aria-labelledby=\"label\"\r\n                defaultValue=''\r\n                name=\"radio-button\"\r\n                onChange={handleOnChange}\r\n                value={Radiovalue}\r\n            >\r\n\r\n                <FormControlLabel value={value} control={<Radio />} label=\"Igaz\" />\r\n                <FormControlLabel value={0} control={<Radio />} label=\"Hamis\" />\r\n            </RadioGroup>\r\n        </FormControl>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}