{"ast":null,"code":"import _defineProperty from\"D:/react/FormComponent/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _objectSpread from\"D:/react/FormComponent/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"D:/react/FormComponent/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{FormControl,MenuItem,Select,InputLabel}from\"@mui/material\";import cn from\"classnames\";import{useEffect,useState,useImperativeHandle}from'react';import{useDispatch,useSelector}from\"react-redux\";import{setErrorById,selectErrorById}from\"../redux/progress\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function ListComponent(_ref){var values=_ref.values,id=_ref.id,required=_ref.required,formState=_ref.formState;var st=useSelector(function(state){return state.progress.errors;});var form=useSelector(function(state){return state.form.tasks[id];});var _useState=useState(function(){if(form&&form.formValue!==null){return Object.keys(form.formValue)[0];}return 0;}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var formValues=formState.formValues,setFormValues=formState.setFormValues;var handleOnChange=function handleOnChange(event,newValue){setValue(event.target.value);var key=newValue.props.value;setFormValues(function(formValues){return _objectSpread(_objectSpread({},formValues),{},_defineProperty({},id,_objectSpread(_objectSpread({},formValues[id]),{},{formValue:_defineProperty({},key,values[key])})));});};return/*#__PURE__*/_jsxs(FormControl,{style:{minWidth:240},error:st[id]&&true,children:[/*#__PURE__*/_jsx(InputLabel,{id:\"select\",children:st[id]?st[id]:'Pont'}),/*#__PURE__*/_jsx(Select,{labelId:\"demo-simple-select-label\",id:\"select\",value:value?value:'',label:\"Pont\",onChange:handleOnChange,children:Object.entries(values).map(function(value){return/*#__PURE__*/_jsx(MenuItem,{value:value[0],children:value[1]},value[0]);})})]});}","map":{"version":3,"sources":["D:/react/FormComponent/src/FormComponents/ListComponent.js"],"names":["FormControl","MenuItem","Select","InputLabel","cn","useEffect","useState","useImperativeHandle","useDispatch","useSelector","setErrorById","selectErrorById","ListComponent","values","id","required","formState","st","state","progress","errors","form","tasks","formValue","Object","keys","value","setValue","formValues","setFormValues","handleOnChange","event","newValue","target","key","props","minWidth","entries","map"],"mappings":"qUAAA,OACIA,WADJ,CAEIC,QAFJ,CAGIC,MAHJ,CAIIC,UAJJ,KAKO,eALP,CAMA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,OAASC,SAAT,CAAoBC,QAApB,CAA8BC,mBAA9B,KAAyD,OAAzD,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,YAAT,CAAuBC,eAAvB,KAA8C,mBAA9C,C,wFAIA,cAAe,SAASC,CAAAA,aAAT,MAA4D,IAAnCC,CAAAA,MAAmC,MAAnCA,MAAmC,CAA3BC,EAA2B,MAA3BA,EAA2B,CAAvBC,QAAuB,MAAvBA,QAAuB,CAAbC,SAAa,MAAbA,SAAa,CAEvE,GAAMC,CAAAA,EAAE,CAAGR,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACC,QAAN,CAAeC,MAA1B,EAAD,CAAtB,CACA,GAAMC,CAAAA,IAAI,CAAGZ,WAAW,CAAC,SAACS,KAAD,QAAWA,CAAAA,KAAK,CAACG,IAAN,CAAWC,KAAX,CAAiBR,EAAjB,CAAX,EAAD,CAAxB,CAEA,cAA0BR,QAAQ,CAAC,UAAM,CACrC,GAAGe,IAAI,EAAIA,IAAI,CAACE,SAAL,GAAmB,IAA9B,CAAmC,CAC/B,MAAOC,CAAAA,MAAM,CAACC,IAAP,CAAYJ,IAAI,CAACE,SAAjB,EAA4B,CAA5B,CAAP,CACH,CACG,MAAO,EAAP,CACP,CALiC,CAAlC,wCAAOG,KAAP,eAAcC,QAAd,eAOA,GAAQC,CAAAA,UAAR,CAAsCZ,SAAtC,CAAQY,UAAR,CAAoBC,aAApB,CAAsCb,SAAtC,CAAoBa,aAApB,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAQC,QAAR,CAAqB,CACxCL,QAAQ,CAACI,KAAK,CAACE,MAAN,CAAaP,KAAd,CAAR,CAEA,GAAMQ,CAAAA,GAAG,CAAGF,QAAQ,CAACG,KAAT,CAAeT,KAA3B,CACAG,aAAa,CAAC,SAACD,UAAD,wCACPA,UADO,wBAETd,EAFS,gCAGHc,UAAU,CAACd,EAAD,CAHP,MAINS,SAAS,oBAAKW,GAAL,CAAWrB,MAAM,CAACqB,GAAD,CAAjB,CAJH,MAAD,CAAb,CAOH,CAXD,CAaA,mBACI,MAAC,WAAD,EAAa,KAAK,CAAE,CAAEE,QAAQ,CAAE,GAAZ,CAApB,CAAuC,KAAK,CAAEnB,EAAE,CAACH,EAAD,CAAF,EAAU,IAAxD,wBACI,KAAC,UAAD,EAAY,EAAE,CAAC,QAAf,UAAyBG,EAAE,CAACH,EAAD,CAAF,CAASG,EAAE,CAACH,EAAD,CAAX,CAAkB,MAA3C,EADJ,cAEI,KAAC,MAAD,EACI,OAAO,CAAC,0BADZ,CAEI,EAAE,CAAC,QAFP,CAGI,KAAK,CAAEY,KAAK,CAAGA,KAAH,CAAW,EAH3B,CAII,KAAK,CAAC,MAJV,CAKI,QAAQ,CAAEI,cALd,UAQKN,MAAM,CAACa,OAAP,CAAexB,MAAf,EAAuByB,GAAvB,CAA2B,SAACZ,KAAD,qBACxB,KAAC,QAAD,EAEI,KAAK,CAAEA,KAAK,CAAC,CAAD,CAFhB,UAGKA,KAAK,CAAC,CAAD,CAHV,EACSA,KAAK,CAAC,CAAD,CADd,CADwB,EAA3B,CARL,EAFJ,GADJ,CAqBH","sourcesContent":["import {\r\n    FormControl,\r\n    MenuItem,\r\n    Select,\r\n    InputLabel\r\n} from \"@mui/material\";\r\nimport cn from \"classnames\";\r\nimport { useEffect, useState, useImperativeHandle } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setErrorById, selectErrorById } from \"../redux/progress\"\r\n\r\n\r\n\r\nexport default function ListComponent({ values, id, required, formState }) {\r\n\r\n    const st = useSelector((state) => state.progress.errors);\r\n    const form = useSelector((state) => state.form.tasks[id]);\r\n\r\n    const [value, setValue] = useState(() => {\r\n        if(form && form.formValue !== null){\r\n            return Object.keys(form.formValue)[0];\r\n        }\r\n            return 0\r\n    });\r\n\r\n    const { formValues, setFormValues } = formState\r\n\r\n    const handleOnChange = (event, newValue) => {\r\n        setValue(event.target.value)\r\n\r\n        const key = newValue.props.value;\r\n        setFormValues((formValues) => ({\r\n            ...formValues,\r\n            [id]: {\r\n                ...formValues[id],\r\n                formValue: { [key]: values[key] }\r\n            }\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <FormControl style={{ minWidth: 240 }} error={st[id] && true} >\r\n            <InputLabel id=\"select\">{st[id] ? st[id] : 'Pont'}</InputLabel>\r\n            <Select\r\n                labelId=\"demo-simple-select-label\"\r\n                id=\"select\"\r\n                value={value ? value : ''}\r\n                label='Pont'\r\n                onChange={handleOnChange}\r\n            >\r\n\r\n                {Object.entries(values).map((value) => (\r\n                    <MenuItem\r\n                        key={value[0]}\r\n                        value={value[0]}>\r\n                        {value[1]}</MenuItem>\r\n                ))}\r\n            </Select>\r\n        </FormControl>\r\n\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}